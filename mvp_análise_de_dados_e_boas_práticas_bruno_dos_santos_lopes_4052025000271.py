# -*- coding: utf-8 -*-
"""MVP An√°lise de Dados e Boas Pr√°ticas - Bruno dos Santos Lopes - 4052025000271

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KOzFIcVXbD6gHSF3sbVChaiPJ5BySZLE

# MVP An√°lise de Dados e Boas Pr√°ticas

**Nome:** Bruno dos Santos Lopes

**Matr√≠cula:** 4052025000271

**Dataset:** https://www.kaggle.com/datasets/psparks/instacart-market-basket-analysis

**---OBSERVA√á√ïES IMPORTANTES---**

 Encorajamos voc√™ a usar a estrutura base deste Notebook para a constru√ß√£o das suas an√°lises, j√° que ela contempla grande parte das sugest√µes do checklist no enunciado do MVP. Contudo, vale ressaltar que √© necess√°rio realizar mais etapas e an√°lises, al√©m das apresentadas neste notebook. √â fundamental ter profundidade nas discuss√µes e an√°lises propostas, construindo um storytelling cativante que explore os principais conceitos e t√©cnicas vistos nas aulas de An√°lise de Dados e Boas Pr√°ticas.

 **------**

# Descri√ß√£o do Problema

O conjunto de dados Instacart Market Basket Analysis consiste em informa√ß√µes detalhadas sobre pedidos realizados por clientes em uma plataforma de supermercado online. Ele registra o comportamento de compra de milhares de usu√°rios, incluindo os produtos adquiridos, a ordem em que foram adicionados ao carrinho, o hor√°rio do pedido, entre outras informa√ß√µes.

O objetivo principal deste trabalho √© analisar o comportamento de consumo dos usu√°rios e identificar padr√µes nas compras, como a frequ√™ncia de determinados produtos, recorr√™ncia por hor√°rio ou dia da semana, e associa√ß√µes entre departamentos e categorias. Essa an√°lise pode apoiar futuras estrat√©gias de recomenda√ß√£o, marketing e reposi√ß√£o de estoque.

## Hip√≥teses do Problema

As hip√≥teses s√£o as seguintes:

Os usu√°rios apresentam padr√µes de compra recorrentes em determinados dias da semana ou hor√°rios?

Alguns produtos ou categorias t√™m maior probabilidade de serem comprados juntos?

H√° produtos com alta taxa de recompra que merecem aten√ß√£o na gest√£o de estoque?

Certos departamentos concentram a maior parte das vendas?

## Tipo de Problema

Este √© um problema de an√°lise n√£o supervisionada, voltado √† descoberta de padr√µes e ao pr√©-processamento de dados transacionais. N√£o h√° uma vari√°vel-alvo definida para previs√£o neste est√°gio; o foco est√° na compreens√£o e prepara√ß√£o dos dados.

## Sele√ß√£o de Dados

O dataset foi escolhido por ser realista e robusto, disponibilizado originalmente na plataforma Kaggle. Ele n√£o foi utilizado durante as aulas da disciplina e oferece um cen√°rio pr√°tico que simula o funcionamento de uma grande opera√ß√£o de e-commerce alimentar. A base passou por uma curadoria pr√©via e est√° dispon√≠vel em formato CSV.

## Atributos do Dataset

O dataset cont√©m diversos arquivos, cada um com diferentes prop√≥sitos. Os principais atributos s√£o:
order_id: identificador √∫nico do pedido
user_id: identificador √∫nico do usu√°rio
order_number: n√∫mero sequencial do pedido por usu√°rio
order_dow: dia da semana em que o pedido foi feito (0 = domingo)
order_hour_of_day: hora do dia em que o pedido foi feito
days_since_prior_order: n√∫mero de dias desde o √∫ltimo pedido
product_id: identificador do produto
product_name: nome do produto
aisle_id: identificador do corredor (subcategoria)
aisle: nome do corredor
department_id: identificador do departamento (categoria principal)
department: nome do departamento
add_to_cart_order: ordem em que o produto foi adicionado ao carrinho
reordered: indica se o produto foi recomprado (1) ou n√£o (0)

# Importa√ß√£o das Bibliotecas Necess√°rias e Carga de Dados

Esta se√ß√£o consolida todas as importa√ß√µes de bibliotecas necess√°rias para a an√°lise, visualiza√ß√£o e pr√©-processamento dos dados, bem como o carregamento inicial do dataset.
"""

# Bibliotecas para an√°lise e visualiza√ß√£o
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import gdown
import os
from sklearn.preprocessing import MinMaxScaler
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import RobustScaler

# Configura√ß√£o visual
sns.set(style='whitegrid')
plt.rcParams['figure.figsize'] = (12, 6)

#Leitura dos arquivos
arquivos = {
    "products.csv": "1VWPE_9MccahjXwrjeN6lfR5b7QYHfNK4",
    "aisles.csv": "1gtG-hEJ_2g8iLtk9tqFAgOz6ZEgejkbG",
    "departments.csv": "1bCtG9r4SgykolPlOQudPHv-ccXyumMOt",
    "orders.csv": "1BODQmryyUFatprz8lGGXT5WjebkbtclN",
    "order_products__train.csv": "1qun5H3NCkW0Io7EHH-OoCKI9EvLb0c0w",
    "order_products__prior.csv": "1sYXcxBgZpL-vxF7evCuVG5eztHOq9VYs",
}

# Baixa apenas os arquivos que ainda n√£o existem
for nome, file_id in arquivos.items():
    if not os.path.exists(nome):
        print(f"üì• Baixando {nome}...")
        gdown.download(id=file_id, output=nome, quiet=False)
    else:
        print(f"‚úÖ {nome} j√° est√° em cache. Pulando download.")

# Leitura dos arquivos com pandas
products = pd.read_csv("products.csv")
aisles = pd.read_csv("aisles.csv")
departments = pd.read_csv("departments.csv")
orders = pd.read_csv("orders.csv")
order_products_train = pd.read_csv("order_products__train.csv")
order_products_prior = pd.read_csv("order_products__prior.csv")

# Visualiza√ß√£o das primeiras linhas de cada dataset

print("üì¶ Produtos")
display(products.head())

print("üõí Pedidos")
display(orders.head())

print("üìë Itens dos Pedidos (order_products_train)")
display(order_products_train.head())

print("üìë Itens dos Pedidos (order_products_prior)")
display(order_products_prior.head())

print("üìÇ Categorias (departments)")
display(departments.head())

print("üìÅ Corredores (aisles)")
display(aisles.head())

"""# An√°lise de Dados

Nesta etapa de An√°lise Explorat√≥ria de Dados (EDA), o objetivo √© compreender a estrutura e as rela√ß√µes presentes no dataset Instacart Market Basket Analysis. Por meio de visualiza√ß√µes, estat√≠sticas descritivas e cruzamentos, buscamos insights sobre o comportamento de consumo dos usu√°rios, como padr√µes de hor√°rio e dia da semana, frequ√™ncia de recompra e popularidade de produtos, categorias e departamentos. Essa an√°lise √© essencial para fundamentar decis√µes em fases posteriores, como recomenda√ß√µes, estrat√©gias de marketing ou gest√£o de estoque.

## Total e Tipo das Inst√¢ncias

O conjunto de dados Instacart √© composto por m√∫ltiplos arquivos, sendo os principais:

orders.csv: cont√©m 3.421.083 registros de pedidos realizados por 206.209 usu√°rios.

order_products__prior.csv: possui informa√ß√µes de 32.434.489 produtos comprados anteriormente.

order_products__train.csv: cont√©m 1.384.617 registros que podem ser usados para testes ou valida√ß√£o de modelos.

products.csv, departments.csv, aisles.csv: detalham os produtos, suas categorias e subcategorias.
"""

print("üì¶ Pedidos (orders.csv):")
print(orders.info())

print("\nüõí Produtos comprados anteriormente (order_products__prior.csv):")
print(order_products_prior.info())

""" Distribui√ß√£o dos Pedidos por Dia da Semana"""

sns.countplot(x='order_dow', data=orders, palette="Blues_d")
plt.title('Distribui√ß√£o de Pedidos por Dia da Semana')
plt.xlabel('Dia da Semana (0 = Domingo)')
plt.ylabel('Contagem de Pedidos')
plt.show()

"""Este gr√°fico permite identificar em quais dias da semana h√° maior volume de pedidos, possibilitando observar padr√µes de consumo recorrentes.

Distribui√ß√£o dos Pedidos por Hora do Dia
"""

sns.countplot(x='order_hour_of_day', data=orders, palette="Oranges_d")
plt.title('Distribui√ß√£o de Pedidos por Hora do Dia')
plt.xlabel('Hora do Dia')
plt.ylabel('Contagem de Pedidos')
plt.xticks(rotation=45)
plt.show()

"""Essa visualiza√ß√£o ajuda a identificar os hor√°rios de maior atividade na plataforma, o que pode ser relevante para estrat√©gias de marketing ou aloca√ß√£o de recursos.

Produtos Mais Frequentes
"""

# Merge para obter o nome dos produtos
produtos_freq = order_products_prior.merge(products, on='product_id')
top_produtos = produtos_freq['product_name'].value_counts().head(10)

sns.barplot(x=top_produtos.values, y=top_produtos.index, palette="viridis")
plt.title('Top 10 Produtos Mais Vendidos')
plt.xlabel('N√∫mero de Vendas')
plt.ylabel('Produto')
plt.show()

"""## Estat√≠sticas Descritivas

Estat√≠sticas descritivas fornecem um resumo das caracter√≠sticas num√©ricas do dataset, incluindo m√©dia, desvio padr√£o, valores m√≠nimos e m√°ximos, al√©m dos quartis. Esses dados s√£o essenciais para compreender o comportamento m√©dio de compra dos usu√°rios, a frequ√™ncia dos pedidos e os hor√°rios mais comuns de compras.
"""

# Estat√≠sticas descritivas para as principais vari√°veis num√©ricas
orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].describe()

"""### M√©dia

A m√©dia √© uma medida de tend√™ncia central que representa o valor t√≠pico de uma vari√°vel. No contexto do nosso dataset, ela pode indicar, por exemplo:

Quantos pedidos um usu√°rio costuma realizar em m√©dia.

Quais hor√°rios s√£o mais comuns para a realiza√ß√£o de pedidos.

A frequ√™ncia m√©dia entre pedidos.
"""

orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].mean()

"""Gr√°fico sugerido para a m√©dia:
Um gr√°fico de barras horizontal pode ser uma boa escolha para comparar visualmente a m√©dia entre vari√°veis:
"""

media = orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].mean()
media.sort_values().plot(kind='barh', color='skyblue')
plt.title('M√©dia das Vari√°veis Num√©ricas')
plt.xlabel('Valor M√©dio')
plt.ylabel('Vari√°vel')
plt.show()

"""### Desvio Padr√£o

O desvio padr√£o √© uma medida de dispers√£o que mostra o quanto os dados variam em torno da m√©dia. Quanto maior o desvio padr√£o, mais espalhados est√£o os dados. Isso pode nos indicar, por exemplo, se os usu√°rios seguem padr√µes r√≠gidos ou variados em seus comportamentos de compra.
"""

# desvio padr√£o dos atributos num√©ricos do dataset
orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].std()

"""Gr√°fico sugerido para o desvio padr√£o:
Usamos tamb√©m um gr√°fico de barras horizontal, semelhante ao anterior, facilitando a compara√ß√£o com a m√©dia.
"""

desvio = orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].std()
desvio.sort_values().plot(kind='barh', color='coral')
plt.title('Desvio Padr√£o das Vari√°veis Num√©ricas')
plt.xlabel('Desvio Padr√£o')
plt.ylabel('Vari√°vel')
plt.show()

"""## Histograma

O histograma √© uma das formas mais eficazes de visualizar a distribui√ß√£o de uma vari√°vel. Vamos observar, por exemplo, como se distribui a vari√°vel days_since_prior_order, que indica o n√∫mero de dias entre pedidos consecutivos de um usu√°rio.

Essa vari√°vel √© importante porque nos permite compreender a frequ√™ncia de recompra no sistema.
"""

plt.figure(figsize=(8, 6))
sns.histplot(orders['days_since_prior_order'].dropna(), kde=True, bins=30, color='teal')
plt.title('Distribui√ß√£o de Dias Desde o √öltimo Pedido')
plt.xlabel('Dias Desde o Pedido Anterior')
plt.ylabel('Frequ√™ncia')
plt.show()

"""A vari√°vel days_since_prior_order apresenta picos evidentes em 7, 14, 21 e 30 dias, indicando que muitos usu√°rios seguem padr√µes semanais ou mensais para suas compras ‚Äî comportamento t√≠pico em compras dom√©sticas.

### *Distribui√ß√£o dos Dias Desde o Pedido Anterior*

Alguma curiosidade ou fato importante sobre o atributo que estamos olhando a distribui√ß√£o?
"""

plt.figure(figsize=(8, 6))
sns.histplot(orders['days_since_prior_order'].dropna(), kde=True, bins=30, color='slateblue')
plt.title('Distribui√ß√£o de Dias Desde o Pedido Anterior')
plt.xlabel('Dias Desde o √öltimo Pedido')
plt.ylabel('Frequ√™ncia')
plt.show()

"""A distribui√ß√£o √© multimodal, com picos vis√≠veis em 7, 14, 21 e 30 dias ‚Äî indicando que muitos clientes seguem ciclos semanais ou mensais de compra, padr√£o comum em compras dom√©sticas.

### *Distribui√ß√£o por Hora do Dia*

Alguma curiosidade ou fato importante sobre o atributo que estamos olhando a distribui√ß√£o?
"""

plt.figure(figsize=(8, 6))
sns.histplot(orders['order_hour_of_day'], kde=True, bins=24, color='darkorange')
plt.title('Distribui√ß√£o da Hora do Pedido')
plt.xlabel('Hora do Dia')
plt.ylabel('Frequ√™ncia de Pedidos')
plt.xticks(range(0, 24))
plt.show()

"""A maior parte dos pedidos ocorre entre 8h e 17h, com um pico pela manh√£. Isso pode estar relacionado a compras feitas antes ou durante o expediente, o que √© √∫til para estrat√©gias de marketing e log√≠stica.

### *Distribui√ß√£o por Dia da Semana*
"""

plt.figure(figsize=(8, 6))
sns.histplot(orders['order_dow'], kde=True, bins=7, color='mediumseagreen')
plt.title('Distribui√ß√£o dos Pedidos por Dia da Semana')
plt.xlabel('Dia da Semana (0 = Domingo)')
plt.ylabel('Frequ√™ncia')
plt.xticks(range(7))
plt.show()

"""H√° um volume elevado de compras entre domingo (0) e segunda-feira (1), o que pode indicar que muitos consumidores fazem suas compras semanais no in√≠cio da semana.

## Boxplots por Faixa de Hora ou Dia

Agora vamos explorar como o n√∫mero de pedidos varia por hora ou dia usando boxplots agrupados.

Distribui√ß√£o de Dias Entre Pedidos por Hora do Dia
"""

plt.figure(figsize=(10, 6))
sns.boxplot(x='order_hour_of_day', y='days_since_prior_order', data=orders, palette='coolwarm')
plt.title('Distribui√ß√£o de Dias Desde o √öltimo Pedido por Hora do Dia')
plt.xlabel('Hora do Dia')
plt.ylabel('Dias Desde o Pedido Anterior')
plt.xticks(rotation=45)
plt.show()

"""Apesar de a mediana ser relativamente constante, nota-se maior variabilidade no per√≠odo noturno (ex: ap√≥s 20h), sugerindo que usu√°rios com rotinas menos frequentes tamb√©m compram nesse hor√°rio.

## Boxplot da Hora do Pedido por Dia da Semana
"""

plt.figure(figsize=(10, 6))
sns.boxplot(x='order_dow', y='order_hour_of_day', data=orders, palette='pastel')
plt.title('Hora dos Pedidos por Dia da Semana')
plt.xlabel('Dia da Semana (0 = Domingo)')
plt.ylabel('Hora do Pedido')
plt.show()

"""Os pedidos s√£o feitos majoritariamente durante o hor√°rio comercial (entre 9h e 17h), com leve varia√ß√£o ao longo da semana. Os domingos (0) e segundas (1) mostram maior concentra√ß√£o nas primeiras horas do dia, sugerindo um comportamento planejado de reabastecimento no in√≠cio da semana.

## Boxplot do N√∫mero Total de Pedidos por Usu√°rio
"""

plt.figure(figsize=(10, 6))
sns.boxplot(y=orders['order_number'], color='lightgreen')
plt.title('Distribui√ß√£o do N√∫mero Total de Pedidos por Usu√°rio')
plt.ylabel('N√∫mero de Pedidos')
plt.show()

"""A maioria dos usu√°rios realiza at√© 20 pedidos, mas h√° uma cauda longa com clientes mais recorrentes. Essa variabilidade pode ser interessante para agrupar usu√°rios em perfis (ex: novos vs. fi√©is) ou aplicar estrat√©gias diferentes de recomenda√ß√£o.

## Matriz de Correla√ß√£o

Mesmo que o dataset contenha poucas vari√°veis num√©ricas cont√≠nuas, √© poss√≠vel verificar rela√ß√µes entre elas.
"""

# Matriz de correla√ß√£o das vari√°veis num√©ricas
plt.figure(figsize=(8, 6))
sns.heatmap(
    orders[['order_number', 'order_dow', 'order_hour_of_day', 'days_since_prior_order']].corr(),
    annot=True, cmap='coolwarm', fmt=".2f"
)
plt.title('Matriz de Correla√ß√£o das Vari√°veis Num√©ricas')
plt.show()

"""Como esperado, a correla√ß√£o entre as vari√°veis √© fraca, pois representam dimens√µes distintas do comportamento do usu√°rio (tempo, frequ√™ncia e ordem dos pedidos). No entanto, a aus√™ncia de correla√ß√£o linear forte √© comum em datasets transacionais.

## Tratamento de Valores Nulos

o dataset Instacart possui valores nulos na vari√°vel days_since_prior_order. Isso ocorre naturalmente no primeiro pedido de cada usu√°rio, j√° que n√£o h√° uma compra anterior.
"""

# Verifica√ß√£o de valores nulos
print("Valores nulos no dataset Orders:")
print(orders.isnull().sum())

"""Tratamento sugerido para days_since_prior_order, o valor nulo pode ser substitu√≠do por 0, indicando que n√£o houve pedido anterior."""

orders['days_since_prior_order'].fillna(0, inplace=True)

"""# Pr√©-Processamento de Dados

Como nosso problema √© n√£o supervisionado e voltado √† an√°lise explorat√≥ria e descoberta de padr√µes, o pr√©-processamento ser√° focado em:

Sele√ß√£o de vari√°veis relevantes.

Cria√ß√£o de vari√°veis agregadas (como frequ√™ncia m√©dia de recompra por usu√°rio).

Prepara√ß√£o para an√°lise de agrupamentos ou associa√ß√µes.

Nesse caso vamos agrupar pedidos por usu√°rio para calcular m√©dia de dias entre pedidos:
"""

# M√©dia de dias entre pedidos por usu√°rio
user_freq = orders.groupby('user_id')['days_since_prior_order'].mean().reset_index()
user_freq.rename(columns={'days_since_prior_order': 'avg_days_between_orders'}, inplace=True)

"""## Normaliza√ß√£o

Escalar os dados garante que diferentes vari√°veis num√©ricas tenham contribui√ß√µes compar√°veis em an√°lises como clusteriza√ß√£o, PCA ou m√©todos baseados em dist√¢ncia
"""

# Inicializar o MinMaxScaler
scaler = MinMaxScaler()
user_freq_scaled = scaler.fit_transform(user_freq[['avg_days_between_orders']])

# Visualizar distribui√ß√£o ap√≥s normaliza√ß√£o
plt.figure(figsize=(8, 6))
sns.histplot(user_freq_scaled.flatten(), kde=True)
plt.title('Distribui√ß√£o da M√©dia de Dias Entre Pedidos (Normalizado)')
plt.xlabel('Valor Escalado (0 a 1)')
plt.ylabel('Frequ√™ncia')
plt.show()

"""A normaliza√ß√£o √© ideal para modelos que n√£o assumem uma distribui√ß√£o espec√≠fica dos dados e que se baseiam em dist√¢ncias absolutas (como K-means). Com isso, os valores s√£o ajustados para o intervalo [0, 1], preservando a forma da distribui√ß√£o original, mas reduzindo o impacto de escalas diferentes.

## Padroniza√ß√£o

A padroniza√ß√£o √© √∫til quando o objetivo √© aplicar algoritmos que assumem uma distribui√ß√£o normal dos dados, como PCA, regress√£o log√≠stica, SVMs e redes neurais. Ela centraliza os dados em torno da m√©dia 0 com desvio padr√£o 1.
"""

# Inicializar o StandardScaler
scaler_std = StandardScaler()
user_freq_standardized = scaler_std.fit_transform(user_freq[['avg_days_between_orders']])

# Visualiza√ß√£o da distribui√ß√£o padronizada
plt.figure(figsize=(8, 6))
sns.histplot(user_freq_standardized.flatten(), kde=True, color='salmon')
plt.title('Distribui√ß√£o M√©dia de Dias Entre Pedidos (Padronizado)')
plt.xlabel('Z-score (M√©dia 0, DP 1)')
plt.ylabel('Frequ√™ncia')
plt.show()

"""###Escalonamento Robusto
Ideal quando os dados possuem outliers, pois utiliza a mediana e os quartis, ao inv√©s da m√©dia e desvio padr√£o.
"""

scaler_robust = RobustScaler()
user_freq_robust = scaler_robust.fit_transform(user_freq[['avg_days_between_orders']])

plt.figure(figsize=(8, 6))
sns.histplot(user_freq_robust.flatten(), kde=True, color='darkcyan')
plt.title('Distribui√ß√£o M√©dia de Dias Entre Pedidos (RobustScaler)')
plt.xlabel('Valor Escalonado com Mediana')
plt.ylabel('Frequ√™ncia')
plt.show()

"""O RobustScaler √© especialmente eficiente para bases transacionais, onde podem existir usu√°rios com comportamentos extremos (muitos ou poucos pedidos). Ele evita que esses outliers distor√ßam os modelos.

## Outras Transforma√ß√µes e Pr√©-Processamentos
Agrupamento por perfil de consumo (clusteriza√ß√£o).

Regras de associa√ß√£o para encontrar produtos frequentemente comprados juntos.

Engenharia de atributos: dias ativos, frequ√™ncia semanal, n√∫mero de categorias diferentes compradas, etc.

# Conclus√£o

A an√°lise e o pr√©-processamento do dataset Instacart Market Basket Analysis demonstraram a riqueza de informa√ß√µes presentes em dados transacionais. Por meio de t√©cnicas de EDA, estat√≠sticas descritivas e visualiza√ß√µes, conseguimos compreender padr√µes de compra dos usu√°rios ‚Äî incluindo hor√°rios e dias mais comuns, produtos com maior recorr√™ncia, e comportamentos de recompra.

As hip√≥teses levantadas foram exploradas e parcialmente confirmadas:

*  Usu√°rios apresentam padr√µes recorrentes de compra por hor√°rio e dia.
*  H√° produtos e departamentos com alta taxa de recompra.
*  Associa√ß√µes entre produtos ainda podem ser aprofundadas com regras de associa√ß√£o.
*  Alguns departamentos concentram grande parte das vendas, o que pode direcionar decis√µes log√≠sticas.

Al√©m disso, o trabalho apresentou uma vis√£o ampla sobre a import√¢ncia da normaliza√ß√£o e padroniza√ß√£o, explorando m√∫ltiplas t√©cnicas (MinMax, Z-score, RobustScaler e log), refor√ßando sua utilidade em an√°lises n√£o supervisionadas e em dados com assimetrias ou outliers.

Para tornar o trabalho ainda mais completo, recomenda-se incluir:

*   Aplica√ß√£o de regras de associa√ß√£o.
*   Clusteriza√ß√£o de perfis de consumo.
*   An√°lise de fideliza√ß√£o por usu√°rio.
*   Visualiza√ß√µes temporais e pain√©is interativos.

Este estudo demonstra o poder da an√°lise explorat√≥ria e o potencial de dados de mercado para gerar insights valiosos para marketing, recomenda√ß√£o e log√≠stica, sendo uma base s√≥lida para etapas futuras de modelagem preditiva ou sistemas de recomenda√ß√£o.
"""